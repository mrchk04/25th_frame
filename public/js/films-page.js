// films-page.js - –õ–æ–≥—ñ–∫–∞ –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ñ—ñ–ª—å–º—ñ–≤ –∑ debug

class FilmsPage {
    constructor() {
        console.log('üé¨ FilmsPage: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è...');
        
        this.currentPage = 1;
        this.totalPages = 1;
        this.perPage = 12;
        this.currentFilters = {
            q: '',
            status: '',
            genre: '',
            limit: this.perPage,
            offset: 0
        };
        this.isLoading = false;
        
        this.init();
    }

    async init() {
        console.log('üé¨ FilmsPage: –ü–æ—á–∞—Ç–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó');
        
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å filmsManager
            if (!window.filmsManager) {
                throw new Error('FilmsManager –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π');
            }
            
            console.log('üé¨ FilmsPage: FilmsManager –∑–Ω–∞–π–¥–µ–Ω–æ');
            
            await this.setupPage();
            await this.loadInitialData();
            this.setupEventListeners();
            
            console.log('üé¨ FilmsPage: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ');
        } catch (error) {
            console.error('üé¨ FilmsPage: –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:', error);
            this.showError('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏: ' + error.message);
        }
    }

    async setupPage() {
        console.log('üé¨ FilmsPage: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏');
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏
        const filtersContainer = document.getElementById('filters-container');
        if (filtersContainer && window.filmsManager) {
            console.log('üé¨ FilmsPage: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤');
            window.filmsManager.createFiltersPanel(filtersContainer, (filters) => {
                console.log('üé¨ FilmsPage: –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤:', filters);
                this.applyFilters(filters);
            });
        } else {
            console.warn('üé¨ FilmsPage: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ FilmsManager –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        try {
            await this.loadAndShowStats();
        } catch (error) {
            console.warn('üé¨ FilmsPage: –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        }
    }

    async loadInitialData() {
        console.log('üé¨ FilmsPage: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö');
        await this.loadFilms();
    }

    async loadFilms(filters = this.currentFilters) {
        if (this.isLoading) {
            console.log('üé¨ FilmsPage: –í–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ');
            return;
        }
        
        console.log('üé¨ FilmsPage: –ü–æ—á–∞—Ç–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ—ñ–ª—å–º—ñ–≤ –∑ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏:', filters);
        
        this.isLoading = true;
        this.showLoading();

        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å API
            if (!window.filmsManager) {
                throw new Error('FilmsManager –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
            }

            console.log('üé¨ FilmsPage: –ó–∞–ø–∏—Ç –¥–æ API...');
            const data = await window.filmsManager.searchFilms(filters);
            
            console.log('üé¨ FilmsPage: –û—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ:', data);
            
            if (!data || !data.films) {
                throw new Error('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–∏—Ö –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞');
            }

            console.log(`üé¨ FilmsPage: –ó–Ω–∞–π–¥–µ–Ω–æ ${data.films.length} —Ñ—ñ–ª—å–º—ñ–≤`);
            
            this.renderFilms(data.films);
            this.updatePagination(data);
            this.hideNoResults();
            
            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä–∏
            this.currentFilters = { ...filters };
            
            console.log('üé¨ FilmsPage: –§—ñ–ª—å–º–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ');
            
        } catch (error) {
            console.error('üé¨ FilmsPage: –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ—ñ–ª—å–º—ñ–≤:', error);
            this.showError('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ—ñ–ª—å–º—ñ–≤: ' + error.message);
        } finally {
            this.hideLoading();
            this.isLoading = false;
        }
    }

    renderFilms(films) {
        console.log(`üé¨ FilmsPage: –†–µ–Ω–¥–µ—Ä ${films.length} —Ñ—ñ–ª—å–º—ñ–≤`);
        
        const container = document.getElementById('movies-grid');
        if (!container) {
            console.error('üé¨ FilmsPage: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä movies-grid –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            return;
        }

        if (!films || films.length === 0) {
            console.log('üé¨ FilmsPage: –§—ñ–ª—å–º–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è');
            this.showNoResults();
            this.hidePagination();
            return;
        }

        // –û—á–∏—â—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        container.innerHTML = '';

        // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —Ñ—ñ–ª—å–º–∏ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
        films.forEach((film, index) => {
            console.log(`üé¨ FilmsPage: –†–µ–Ω–¥–µ—Ä —Ñ—ñ–ª—å–º—É ${index + 1}: ${film.title}`);
            
            if (!window.filmsManager.createMovieCard) {
                console.error('üé¨ FilmsPage: –ú–µ—Ç–æ–¥ createMovieCard –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
                return;
            }

            const movieCard = window.filmsManager.createMovieCard(film, {
                showRating: true,
                showStatus: true,
                clickable: true,
                showDescription: false
            });
            
            // –î–æ–¥–∞—î–º–æ –∑–∞—Ç—Ä–∏–º–∫—É –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
            movieCard.style.animationDelay = `${index * 0.1}s`;
            container.appendChild(movieCard);
        });

        console.log('üé¨ FilmsPage: –†–µ–Ω–¥–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
        this.showPagination();
    }

    async loadAndShowStats() {
        console.log('üé¨ FilmsPage: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
        
        try {
            const data = await window.filmsManager.getFilmsStats();
            console.log('üé¨ FilmsPage: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–∞:', data);
            this.renderStats(data);
        } catch (error) {
            console.error('üé¨ FilmsPage: –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        }
    }

    renderStats(data) {
        const statsContainer = document.getElementById('films-stats');
        if (!statsContainer) {
            console.warn('üé¨ FilmsPage: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            return;
        }

        if (!data || !data.general) {
            console.warn('üé¨ FilmsPage: –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
            return;
        }

        console.log('üé¨ FilmsPage: –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
        
        const totalElement = document.getElementById('total-films');
        const activeElement = document.getElementById('active-films');
        const upcomingElement = document.getElementById('upcoming-films');

        if (totalElement) totalElement.textContent = data.general.total_films || 0;
        if (activeElement) activeElement.textContent = data.general.active_films || 0;
        if (upcomingElement) upcomingElement.textContent = data.general.upcoming_films || 0;

        statsContainer.style.display = 'block';
    }

    updatePagination(data) {
        this.currentPage = data.page || 1;
        this.totalPages = data.totalPages || 1;

        console.log(`üé¨ FilmsPage: –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó - —Å—Ç–æ—Ä—ñ–Ω–∫–∞ ${this.currentPage} –∑ ${this.totalPages}`);

        const pageInfo = document.getElementById('page-info');
        const prevBtn = document.getElementById('prev-page');
        const nextBtn = document.getElementById('next-page');

        if (pageInfo) {
            pageInfo.textContent = `–°—Ç–æ—Ä—ñ–Ω–∫–∞ ${this.currentPage} –∑ ${this.totalPages}`;
        }

        if (prevBtn) {
            prevBtn.disabled = this.currentPage <= 1;
        }

        if (nextBtn) {
            nextBtn.disabled = this.currentPage >= this.totalPages;
        }

        // –ü–æ–∫–∞–∑—É—î–º–æ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—é —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î –±—ñ–ª—å—à–µ –æ–¥–Ω—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        if (this.totalPages > 1) {
            this.showPagination();
        } else {
            this.hidePagination();
        }
    }

    async applyFilters(filters) {
        console.log('üé¨ FilmsPage: –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤:', filters);
        
        // –°–∫–∏–¥–∞—î–º–æ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—é –ø—Ä–∏ –Ω–æ–≤–æ–º—É –ø–æ—à—É–∫—É
        filters.offset = 0;
        filters.limit = this.perPage;
        
        this.currentPage = 1;
        await this.loadFilms(filters);
    }

    async changePage(direction) {
        const newPage = direction === 'next' ? this.currentPage + 1 : this.currentPage - 1;
        
        console.log(`üé¨ FilmsPage: –ó–º—ñ–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –Ω–∞ ${newPage}`);
        
        if (newPage < 1 || newPage > this.totalPages) return;

        const filters = {
            ...this.currentFilters,
            offset: (newPage - 1) * this.perPage
        };

        await this.loadFilms(filters);
        
        // –ü—Ä–æ–∫—Ä—É—á—É—î–º–æ –¥–æ –ø–æ—á–∞—Ç–∫—É —Å–ø–∏—Å–∫—É —Ñ—ñ–ª—å–º—ñ–≤
        document.getElementById('movies-grid').scrollIntoView({ 
            behavior: 'smooth', 
            block: 'start' 
        });
    }

    async changePerPage(newPerPage) {
        console.log(`üé¨ FilmsPage: –ó–º—ñ–Ω–∞ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ: ${newPerPage}`);
        
        this.perPage = parseInt(newPerPage);
        
        const filters = {
            ...this.currentFilters,
            limit: this.perPage,
            offset: 0
        };

        this.currentPage = 1;
        await this.loadFilms(filters);
    }

    setupEventListeners() {
        console.log('üé¨ FilmsPage: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π');
        
        // –ü–∞–≥—ñ–Ω–∞—Ü—ñ—è
        const prevBtn = document.getElementById('prev-page');
        const nextBtn = document.getElementById('next-page');
        const perPageSelect = document.getElementById('per-page');
        const resetSearchBtn = document.getElementById('reset-search');

        if (prevBtn) {
            prevBtn.addEventListener('click', () => {
                this.changePage('prev');
            });
        }

        if (nextBtn) {
            nextBtn.addEventListener('click', () => {
                this.changePage('next');
            });
        }

        if (perPageSelect) {
            perPageSelect.addEventListener('change', (e) => {
                this.changePerPage(e.target.value);
            });
        }

        if (resetSearchBtn) {
            resetSearchBtn.addEventListener('click', () => {
                this.resetFilters();
            });
        }

        // –û–±—Ä–æ–±–∫–∞ URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
        this.handleUrlParams();
        
        // –°–ª—É—Ö–∞—î–º–æ –∑–º—ñ–Ω–∏ –≤ URL
        window.addEventListener('popstate', () => {
            this.handleUrlParams();
        });
    }

    handleUrlParams() {
        const urlParams = new URLSearchParams(window.location.search);
        const filters = {
            q: urlParams.get('search') || '',
            status: urlParams.get('status') || '',
            genre: urlParams.get('genre') || '',
            limit: this.perPage,
            offset: 0
        };

        console.log('üé¨ FilmsPage: URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:', filters);

        // –û–Ω–æ–≤–ª—é—î–º–æ —Ñ–æ—Ä–º—É —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
        const searchInput = document.getElementById('search-input');
        const statusFilter = document.getElementById('status-filter');
        const genreFilter = document.getElementById('genre-filter');

        if (searchInput) searchInput.value = filters.q;
        if (statusFilter) statusFilter.value = filters.status;
        if (genreFilter) genreFilter.value = filters.genre;

        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ—ñ–ª—å–º–∏ –∑ –Ω–æ–≤–∏–º–∏ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏
        if (Object.values(filters).some(value => value !== '' && value !== this.perPage && value !== 0)) {
            this.applyFilters(filters);
        }
    }

    updateUrl(filters) {
        const params = new URLSearchParams();
        
        if (filters.q) params.set('search', filters.q);
        if (filters.status) params.set('status', filters.status);
        if (filters.genre) params.set('genre', filters.genre);
        if (this.currentPage > 1) params.set('page', this.currentPage);

        const newUrl = window.location.pathname + (params.toString() ? '?' + params.toString() : '');
        window.history.pushState({}, '', newUrl);
    }

    resetFilters() {
        console.log('üé¨ FilmsPage: –°–∫–∏–¥–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤');
        
        // –û—á–∏—â—É—î–º–æ —Ñ–æ—Ä–º—É
        const searchInput = document.getElementById('search-input');
        const statusFilter = document.getElementById('status-filter');
        const genreFilter = document.getElementById('genre-filter');

        if (searchInput) searchInput.value = '';
        if (statusFilter) statusFilter.value = '';
        if (genreFilter) genreFilter.value = '';

        // –°–∫–∏–¥–∞—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏
        const defaultFilters = {
            q: '',
            status: '',
            genre: '',
            limit: this.perPage,
            offset: 0
        };

        this.applyFilters(defaultFilters);
        
        // –û—á–∏—â—É—î–º–æ URL
        window.history.pushState({}, '', window.location.pathname);
    }

    // –ú–µ—Ç–æ–¥–∏ –ø–æ–∫–∞–∑—É/–ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
    showLoading() {
        console.log('üé¨ FilmsPage: –ü–æ–∫–∞–∑ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è');
        const loading = document.getElementById('loading-indicator');
        if (loading) loading.style.display = 'block';
    }

    hideLoading() {
        console.log('üé¨ FilmsPage: –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è');
        const loading = document.getElementById('loading-indicator');
        if (loading) loading.style.display = 'none';
    }

    showNoResults() {
        console.log('üé¨ FilmsPage: –ü–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"');
        const noResults = document.getElementById('no-results');
        if (noResults) noResults.style.display = 'block';
    }

    hideNoResults() {
        const noResults = document.getElementById('no-results');
        if (noResults) noResults.style.display = 'none';
    }

    showPagination() {
        const pagination = document.getElementById('pagination-container');
        if (pagination) pagination.style.display = 'flex';
    }

    hidePagination() {
        const pagination = document.getElementById('pagination-container');
        if (pagination) pagination.style.display = 'none';
    }

    showError(message) {
        console.error('üé¨ FilmsPage: –ü–æ–∫–∞–∑ –ø–æ–º–∏–ª–∫–∏:', message);
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
        const errorDiv = document.createElement('div');
        errorDiv.className = 'error-message';
        errorDiv.innerHTML = `
            <div class="error-content">
                <h3>‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞</h3>
                <p>${message}</p>
                <button onclick="location.reload()" class="btn-retry">–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É</button>
            </div>
        `;

        const container = document.getElementById('movies-grid');
        if (container) {
            container.innerHTML = '';
            container.appendChild(errorDiv);
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ (–¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑ —ñ–Ω—à–∏—Ö —Å—Ç–æ—Ä—ñ–Ω–æ–∫)
    setFilters(filters) {
        Object.assign(this.currentFilters, filters);
        this.applyFilters(this.currentFilters);
        this.updateUrl(this.currentFilters);
    }

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    getState() {
        return {
            currentPage: this.currentPage,
            totalPages: this.totalPages,
            perPage: this.perPage,
            currentFilters: { ...this.currentFilters },
            isLoading: this.isLoading
        };
    }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ñ—ñ–ª—å–º—ñ–≤
let filmsPage;

document.addEventListener('DOMContentLoaded', function() {
    console.log('üé¨ DOM –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π, —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è FilmsPage');
    
    // –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç—å—Å—è filmsManager
    const initFilmsPage = () => {
        if (window.filmsManager) {
            console.log('üé¨ FilmsManager –∑–Ω–∞–π–¥–µ–Ω–æ, —Å—Ç–≤–æ—Ä—é—î–º–æ FilmsPage');
            filmsPage = new FilmsPage();
            window.filmsPage = filmsPage; // –†–æ–±–∏–º–æ –¥–æ—Å—Ç—É–ø–Ω–∏–º –≥–ª–æ–±–∞–ª—å–Ω–æ
        } else {
            console.log('üé¨ FilmsManager —â–µ –Ω–µ –≥–æ—Ç–æ–≤–∏–π, —á–µ–∫–∞—î–º–æ...');
            setTimeout(initFilmsPage, 100);
        }
    };
    
    initFilmsPage();
});

// –î–æ–¥–∞—î–º–æ CSS —Å—Ç–∏–ª—ñ –¥–ª—è –ø–æ–º–∏–ª–æ–∫
document.addEventListener('DOMContentLoaded', function() {
    const styles = document.createElement('style');
    styles.textContent = `
        .error-message {
            text-align: center;
            padding: 50px 20px;
            grid-column: 1 / -1;
        }
        
        .error-content {
            background: rgba(244, 67, 54, 0.1);
            border: 1px solid rgba(244, 67, 54, 0.3);
            border-radius: 10px;
            padding: 30px;
            max-width: 400px;
            margin: 0 auto;
            color: #fff;
        }
        
        .error-content h3 {
            color: #f44336;
            margin-bottom: 15px;
            font-size: 20px;
        }
        
        .error-content p {
            margin-bottom: 20px;
            color: #ccc;
        }
        
        .btn-retry {
            background: #f44336;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: background 0.3s;
        }
        
        .btn-retry:hover {
            background: #d32f2f;
        }
    `;
    document.head.appendChild(styles);
});