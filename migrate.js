// migrate.js - –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –º—ñ–≥—Ä–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö

const { Pool } = require('pg');
const fs = require('fs');
require('dotenv').config();

const pool = new Pool({
  user: process.env.DB_USER || 'postgres',
  host: process.env.DB_HOST || 'localhost',
  database: process.env.DB_NAME || '25th-frame',
  password: process.env.DB_PASSWORD || '20041204',
  port: process.env.DB_PORT || 5432,
});

async function runMigration() {
  try {
    console.log('üöÄ –ü–æ—á–∞—Ç–æ–∫ –º—ñ–≥—Ä–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...');
    
    // –ß–∏—Ç–∞—î–º–æ SQL —Ñ–∞–π–ª –º—ñ–≥—Ä–∞—Ü—ñ—ó
    const migrationSQL = fs.readFileSync('./migration.sql', 'utf8');
    
    // –í–∏–∫–æ–Ω—É—î–º–æ –º—ñ–≥—Ä–∞—Ü—ñ—é
    await pool.query(migrationSQL);
    
    console.log('‚úÖ –ú—ñ–≥—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const result = await pool.query(`
      SELECT 
        COUNT(*) as total_films,
        COUNT(*) FILTER (WHERE poster_url IS NOT NULL) as with_posters,
        COUNT(*) FILTER (WHERE rating IS NOT NULL) as with_ratings
      FROM films
    `);
    
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ—ñ–ª—å–º—ñ–≤:');
    console.log(`   –í—Å—å–æ–≥–æ —Ñ—ñ–ª—å–º—ñ–≤: ${result.rows[0].total_films}`);
    console.log(`   –ó –ø–æ—Å—Ç–µ—Ä–∞–º–∏: ${result.rows[0].with_posters}`);
    console.log(`   –ó —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏: ${result.rows[0].with_ratings}`);
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–µ–∞–Ω—Å–∏
    const screeningsResult = await pool.query('SELECT COUNT(*) as total FROM screenings');
    console.log(`   –í—Å—å–æ–≥–æ —Å–µ–∞–Ω—Å—ñ–≤: ${screeningsResult.rows[0].total}`);
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –º—ñ–≥—Ä–∞—Ü—ñ—ó:', error.message);
    console.error('–î–µ—Ç–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error);
  } finally {
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫ –º—ñ–≥—Ä–∞—Ü—ñ—ó
runMigration();